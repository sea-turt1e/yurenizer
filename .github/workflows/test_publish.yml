name: Publish and Test to TestPyPI

on:
  push:
    branches: [release]
  pull_request:
    branches: [release]
  workflow_dispatch:

jobs:
  build_publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Python のセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Poetry のインストール
        uses: abatilo/actions-poetry@v2.2.0
        with:
          poetry-version: '1.7.1'

      - name: 依存関係のインストール
        run: poetry install

      - name: パッケージのビルド
        run: poetry build

      - name: TestPyPI へのアップロード
        env:
          TWINE_USERNAME: '__token__'
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: poetry publish -r test-pypi

      - name: パッケージ公開後の待機
        run: sleep 120 

  test_install:
    runs-on: ubuntu-latest
    needs: build_publish

    steps:
      - name: Python のセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 必要なパッケージのインストール
        run: |
          python -m pip install --upgrade pip
          pip install sudachipy sudachidict_full
          pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple yurenizer

      - name: インストールされたパッケージのバージョン確認
        run: |
          pip show yurenizer

      - name: テストスクリプトの実行
        run: |
          echo 'from yurenizer import SynonymNormalizer, NormalizerConfig' > test.py
          echo 'from sudachipy import dictionary' >> test.py
          echo 'sudachi_dict = dictionary.Dictionary().dict_type()' >> test.py
          echo 'import sudachidict_full' >> test.py
          echo 'import os' >> test.py
          echo 'synonym_file_path = os.path.join(os.path.dirname(sudachidict_full.__file__), "resources", "synonyms.txt")' >> test.py
          echo 'normalizer = SynonymNormalizer(synonym_file_path=synonym_file_path, sudachi_dict=sudachi_dict)' >> test.py
          echo 'text = "「パソコン」は「パーソナルコンピュータ」の「synonym」で、「パーソナル・コンピュータ」と表記することもあります。"' >> test.py
          echo 'print(normalizer.normalize(text))' >> test.py
          python test.py